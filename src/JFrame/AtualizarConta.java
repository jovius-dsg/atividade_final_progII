package JFrame;

import ContaSrc.Cliente;
import ContaSrc.Conta;
import Crud.CRUD;
import static Crud.CRUD.listaContas;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;
import javax.swing.*;
import javax.swing.text.MaskFormatter;
import java.text.ParseException;
import java.text.SimpleDateFormat;

public class AtualizarConta extends javax.swing.JFrame {

    private DefaultTableModel modelo;

    /**
     * Creates new form ExcluirConta
     */
    public AtualizarConta() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbContas = new javax.swing.JTable();
        btnListar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.black);
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setMinimumSize(null);
        setSize(new java.awt.Dimension(640, 360));
        getContentPane().setLayout(null);

        jLabel4.setFont(new java.awt.Font("Montserrat", 1, 10)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 153, 153));
        jLabel4.setText("v.1.0.0.0");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(560, 70, 50, 13);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JFrame/x6-filter.png"))); // NOI18N
        jButton1.setPreferredSize(new java.awt.Dimension(28, 38));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(40, 70, 30, 30);

        tbContas.setFont(new java.awt.Font("Montserrat Medium", 0, 12)); // NOI18N
        tbContas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Cpf", "Número", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbContas.setSelectionForeground(new java.awt.Color(153, 153, 153));
        jScrollPane1.setViewportView(tbContas);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(40, 112, 560, 180);

        btnListar.setFont(new java.awt.Font("Montserrat Medium", 0, 12)); // NOI18N
        btnListar.setForeground(new java.awt.Color(0, 102, 153));
        btnListar.setText("Listar");
        btnListar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnListarMouseClicked(evt);
            }
        });
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });
        getContentPane().add(btnListar);
        btnListar.setBounds(170, 300, 80, 22);

        btnSair.setFont(new java.awt.Font("Montserrat Medium", 1, 12)); // NOI18N
        btnSair.setForeground(new java.awt.Color(0, 102, 153));
        btnSair.setText("Sair");
        btnSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSairMouseClicked(evt);
            }
        });
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair);
        btnSair.setBounds(380, 300, 75, 22);

        btnAtualizar.setFont(new java.awt.Font("Montserrat Medium", 0, 12)); // NOI18N
        btnAtualizar.setForeground(new java.awt.Color(0, 102, 153));
        btnAtualizar.setText("Atualizar");
        btnAtualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAtualizarMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAtualizarMousePressed(evt);
            }
        });
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAtualizar);
        btnAtualizar.setBounds(270, 300, 90, 22);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JFrame/x5-clear-list.png"))); // NOI18N
        jButton2.setPreferredSize(new java.awt.Dimension(28, 38));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(80, 70, 30, 30);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JFrame/x1.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 640, 360);

        setSize(new java.awt.Dimension(656, 398));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private boolean isValidDate(String dateStr) {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            sdf.setLenient(false);  // Desabilita a flexibilidade, ou seja, apenas datas válidas são aceitas
            sdf.parse(dateStr);  // Tenta fazer o parse da string
            return true;
        } catch (ParseException e) {
            return false;
        }
    }

    private JFormattedTextField createFormattedDateField() {
        try {
            MaskFormatter dateFormatter = new MaskFormatter("##/##/####");
            dateFormatter.setPlaceholderCharacter('_');
            return new JFormattedTextField(dateFormatter);
        } catch (ParseException e) {
            e.printStackTrace();
            return new JFormattedTextField(); // Retorna um campo simples caso ocorra um erro
        }
    }

    private List<Conta> listarClientesMaiorSaldo(int n) {
        return CRUD.listaContas.stream()
                .sorted((c1, c2) -> Double.compare(c2.getSaldo(), c1.getSaldo())) // Ordena por saldo
                .limit(n) // Limita ao número de clientes solicitado
                .collect(Collectors.toList());
    }

    private List<Conta> listarClientesMaisMovimentacoes(int n) {
        return CRUD.listaContas.stream()
                .sorted((c1, c2) -> Integer.compare(c2.getNumeroMovimentacoes(), c1.getNumeroMovimentacoes())) // Ordena por número de movimentações
                .limit(n) // Limita ao número de clientes solicitado
                .collect(Collectors.toList());
    }

    private void initTabela() {
        modelo = new DefaultTableModel(
                new Object[][]{},
                new String[]{"Nome", "CPF", "Número", "Tipo"}
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Impede edição direta na tabela
            }
        };

        tbContas = new JTable(modelo);
        tbContas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION); // Permite apenas uma seleção
        jScrollPane1.setViewportView(tbContas); // Vincula a tabela ao JScrollPane
    }

    private void listarContas() {
        DefaultTableModel modelo = (DefaultTableModel) tbContas.getModel();
        modelo.setNumRows(0); // Limpa a tabela antes de adicionar dados
        ImageIcon icon = new ImageIcon("C:\\Users\\joaov\\OneDrive\\Documentos\\NetBeansProjects\\Sistema-Bancario-Simples-Java-main\\src\\JFrame\\mensage-icon.png");

        if (CRUD.listaContas.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhuma  conta cadastrada.", "GNB", JOptionPane.INFORMATION_MESSAGE, icon);
            return;
        }

        for (Conta conta : CRUD.listaContas) {
            Cliente cliente = conta.getCliente();
            modelo.addRow(new Object[]{
                cliente.getNome(),
                cliente.getCPF(),
                conta.getNumero(),
                conta.tipo()
            });
        }
    }

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        // TODO add your handling code here:
        listarContas();

    }//GEN-LAST:event_btnListarActionPerformed

    private void btnListarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListarMouseClicked
        // TODO add your handling code here:
        initTabela();
        listarContas();
    }//GEN-LAST:event_btnListarMouseClicked

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSairMouseClicked
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_btnSairMouseClicked

    private void btnAtualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAtualizarMouseClicked
        // TODO add your handling code here:
        ImageIcon icon = new ImageIcon("C:\\Users\\joaov\\OneDrive\\Documentos\\NetBeansProjects\\Sistema-Bancario-Simples-Java-main\\src\\JFrame\\mensage-icon.png");

        int posicao = tbContas.getSelectedRow(); // Obtém a linha selecionada

        if (posicao == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Selecione uma conta para atualizar.", "GNB", JOptionPane.INFORMATION_MESSAGE, icon);
            return;
        }

        Object numero = tbContas.getValueAt(posicao, 2); // Pega o número da conta
        int numeroConta = Integer.parseInt(numero.toString());

        boolean sucesso = CRUD.alterarConta(numeroConta);

        if (sucesso) {
            listarContas(); // Atualiza a tabela
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Falha ao atualizar a conta.", "GNB", JOptionPane.INFORMATION_MESSAGE, icon);
        }

    }//GEN-LAST:event_btnAtualizarMouseClicked

    private void btnAtualizarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAtualizarMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAtualizarMousePressed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        ImageIcon icon = new ImageIcon("C:\\Users\\joaov\\Documents\\NetBeansProjects\\GNBVersaoFinal\\src\\JFrame\\mensage-icon.png");
        
        // Pergunta o número de clientes a ser listado
        int n = 0;
        try {
            n = Integer.parseInt(JOptionPane.showInputDialog(this, "Digite o número de clientes que deseja listar:"));
            if (n <= 0) {
                JOptionPane.showMessageDialog(this, "Número de clientes deve ser maior que zero.", "GNB", JOptionPane.INFORMATION_MESSAGE, icon);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, insira um número válido.", "GNB", JOptionPane.INFORMATION_MESSAGE, icon);
            return;
        }

        // Obtém todas as contas sem filtrar por data
        List<Conta> maioresSaldos = listarClientesMaiorSaldo(n);  // Lista os n clientes com maiores saldos
        List<Conta> maioresMovimentacoes = listarClientesMaisMovimentacoes(n);  // Lista os n clientes com mais movimentações

        // Se as listas estiverem vazias
        if (maioresSaldos.isEmpty() && maioresMovimentacoes.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum dado encontrado.", "GNB", JOptionPane.INFORMATION_MESSAGE, icon);
            return;
        }

        // Cria o relatório
        StringBuilder relatorio = new StringBuilder();
        relatorio.append("Relatório:\n");

        // Exibe os clientes com maior saldo
        if (!maioresSaldos.isEmpty()) {
            relatorio.append("\nClientes com maiores saldos:\n");
            for (Conta conta : maioresSaldos) {
                relatorio.append(String.format("Nome: %s, Saldo: %.2f\n", conta.getCliente().getNome(), conta.getSaldo()));
            }
        } else {
            relatorio.append("\nNenhum cliente com maior saldo encontrado.\n");
        }

        // Exibe os clientes com mais movimentações
        if (!maioresMovimentacoes.isEmpty()) {
            relatorio.append("\nClientes com mais movimentações:\n");
            for (Conta conta : maioresMovimentacoes) {
                relatorio.append(String.format("Nome: %s, Movimentações: %d\n", conta.getCliente().getNome(), conta.getNumeroMovimentacoes()));
            }
        } else {
            relatorio.append("\nNenhum cliente com maior movimentação encontrado.\n");
        }

        // Exibe o relatório
        JOptionPane.showMessageDialog(this, relatorio.toString(), "GNB", JOptionPane.INFORMATION_MESSAGE, icon);

    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) tbContas.getModel();
        modelo.setNumRows(0);
        ImageIcon icon = new ImageIcon("C:\\Users\\joaov\\OneDrive\\Documentos\\NetBeansProjects\\Sistema-Bancario-Simples-Java-main\\src\\JFrame\\mensage-icon.png");

        JOptionPane.showMessageDialog(this, "Tabela limpa!", "GNB", JOptionPane.INFORMATION_MESSAGE, icon);
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AtualizarConta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AtualizarConta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AtualizarConta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AtualizarConta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AtualizarConta().setVisible(true);
            }

        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbContas;
    // End of variables declaration//GEN-END:variables
}
